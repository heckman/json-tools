#!/usr/bin/env zsh
# Copyright 2023 Erik Ben Heckman <erik@heckman.ca>
# SPDX-License-Identifier: MIT


# json v0.1


# launch a json utility

# usage: json <subcommand> [args]

# This is nothing more than a wrapper for utilities that start with "json-",
# which can be anywhere on the PATH.
#
# Subcommands should have the following header comment format:
# the name of the program should be on the first comment line after blank lines
# (comments before the first blank line are ignored)
# a short description should be on the next comment line
# this script is an example of this format

usage(){
	echo "usage: json <subcommand> [args]"
	echo
	echo "where subcommand is one of: "
	find "${(@)path}" -iname 'json-*' 2>/dev/null -exec awk '
			/^ *$/{ f=1 }
			f==0{ next } # skip until we see a blank line
			/^ *#/{
				if(subcommand==""){
					sub("^ *# *json-","")
					subcommand=$1
				}else{
					sub("^ *# *","")
					printf("%12s : %s\n",subcommand,$0)
					exit
				}
			}
		' "{}" \;
	# issue: shadowed commands will show up here.
	echo
	echo "for help using a subcommand, try"
	echo "json <subcommand> --help"
	echo
}

if  (( $+commands[json-$1] ))
then
	exec "json-$1" "${@:2}" 2> >(
		sed "s/json-$1/json $1/" >&2
	)
else
	if [[ $# -eq 0 ]]
	then
		echo "Error: No subcommand specified." >&2
		exit_code=64;
	elif [[ $1 != '--help' && $1 != '-h' ]]
	then
		echo "Error: Can't find subcommand '$1'." >&2
		exit_code=69;
	fi
	echo >&2
	usage >&2
	exit ${exit_code:-0}
fi
